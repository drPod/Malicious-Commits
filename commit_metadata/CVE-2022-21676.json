{
  "engine.io": [
    {
      "hash": "61b949259ed966ef6fc8bfd61f14d1a2ef06d319",
      "author": "Damien Arrachequesne",
      "author_email": "damien.arrachequesne@gmail.com",
      "committed_date": "2020-02-11T07:54:25+01:00",
      "message": "feat: use the cors module to handle cross-origin requests\n\nWe'll now rely on the standard cors module (https://github.com/expressjs/cors),\ninstead of the custom implementation that is error-prone and not\nreally user-friendly.\n\nBreaking change: the handlePreflightRequest option is removed by the\nchange.\n\nBefore:\n\n```\nnew Server({\n  handlePreflightRequest: (req, res) => {\n    res.writeHead(200, {\n      \"Access-Control-Allow-Origin\": 'https://example.com',\n      \"Access-Control-Allow-Methods\": 'GET',\n      \"Access-Control-Allow-Headers\": 'Authorization',\n      \"Access-Control-Allow-Credentials\": true\n    });\n    res.end();\n  }\n})\n```\n\nAfter:\n\n```\nnew Server({\n  cors: {\n    origin: \"https://example.com\",\n    methods: [\"GET\"],\n    allowedHeaders: [\"Authorization\"],\n    credentials: true\n  }\n})\n```",
      "files_changed": [
        "README.md",
        "lib/server.js",
        "lib/transports/index.js",
        "lib/transports/polling-xhr.js",
        "package-lock.json",
        "package.json",
        "test/server.js"
      ],
      "insertions": 164,
      "deletions": 143,
      "original_hash": "61b949259ed966ef6fc8bfd61f14d1a2ef06d319",
      "malicious_files": [
        "lib/server.ts"
      ]
    },
    {
      "hash": "33564b2391e0d4393b636bbb956ba9a8ae5a38e0",
      "author": "Damien Arrachequesne",
      "author_email": "damien.arrachequesne@gmail.com",
      "committed_date": "2020-01-14T21:58:38+01:00",
      "message": "refactor: use prettier to format code",
      "files_changed": [
        ".eslintrc.json",
        "lib/engine.io.js",
        "lib/server.js",
        "lib/socket.js",
        "lib/transport.js",
        "lib/transports/index.js",
        "lib/transports/polling-jsonp.js",
        "lib/transports/polling-xhr.js",
        "lib/transports/polling.js",
        "lib/transports/websocket.js",
        "package-lock.json",
        "package.json",
        "test/common.js",
        "test/engine.io.js",
        "test/fixtures/server-close-upgraded.js",
        "test/fixtures/server-close-upgrading.js",
        "test/fixtures/server-close.js",
        "test/jsonp.js",
        "test/server.js"
      ],
      "insertions": 2305,
      "deletions": 3045,
      "original_hash": "33564b2391e0d4393b636bbb956ba9a8ae5a38e0",
      "malicious_files": [
        "lib/server.ts"
      ]
    },
    {
      "hash": "663d326d18de598318bd2120b2b70cd51adf8955",
      "author": "Damien Arrachequesne",
      "author_email": "damien.arrachequesne@gmail.com",
      "committed_date": "2021-01-14T01:44:52+01:00",
      "message": "feat: add support for v3.x clients\n\nIn order to ease the migration to Socket.IO v3, the Engine.IO server\ncan now communicate with v3.x clients.\n\n```js\nconst eioServer = require(\"engine.io\")(httpServer, {\n  allowEIO3: true // false by default\n});\n```\n\nIf `allowEIO3` is false, the v3.x clients will now receive an HTTP 400\nresponse (\"Unsupported protocol version\").\n\nNote: the code of the v3 parser has been imported from [1] and\nbrowser-related dependencies were removed.\n\n[1]: https://github.com/socketio/engine.io-parser/tree/2.2.1\n\nRelated:\n\n- https://github.com/socketio/engine.io-protocol/issues/35\n- https://github.com/socketio/socket.io-protocol/issues/21",
      "files_changed": [
        ".prettierignore",
        "README.md",
        "lib/parser-v3/index.js",
        "lib/parser-v3/utf8.js",
        "lib/server.js",
        "lib/socket.js",
        "lib/transport.js",
        "lib/transports/polling.js",
        "lib/transports/websocket.js",
        "package-lock.json",
        "package.json",
        "test/common.js",
        "test/fixtures/server-close-upgraded.js",
        "test/fixtures/server-close-upgrading.js",
        "test/fixtures/server-close.js",
        "test/jsonp.js",
        "test/server.js"
      ],
      "insertions": 1013,
      "deletions": 66,
      "original_hash": "663d326d18de598318bd2120b2b70cd51adf8955",
      "malicious_files": [
        "lib/server.ts"
      ]
    },
    {
      "hash": "7e50871c418a6fcffd211d72c3abe1a09035b52e",
      "author": "J\u00e9r\u00e9my Lal",
      "author_email": "kapouer@melix.org",
      "committed_date": "2016-12-12T22:02:03+01:00",
      "message": "[chore] Use uws as default wsEngine, and ws as fallback (#459)",
      "files_changed": [
        "gulpfile.js",
        "lib/engine.io.js",
        "lib/server.js",
        "package.json"
      ],
      "insertions": 36,
      "deletions": 19,
      "original_hash": "7e50871c418a6fcffd211d72c3abe1a09035b52e",
      "malicious_files": [
        "lib/server.ts"
      ]
    },
    {
      "hash": "bb1f8602394a0503578a3eb3302bc289f75035a3",
      "author": "Fedor Indutny",
      "author_email": "fedor.indutny@gmail.com",
      "committed_date": "2012-11-01T00:35:49+04:00",
      "message": "server: send validation failure reason to clients",
      "files_changed": [
        "lib/server.js",
        "test/engine.io.js",
        "test/server.js"
      ],
      "insertions": 44,
      "deletions": 12,
      "original_hash": "bb1f8602394a0503578a3eb3302bc289f75035a3",
      "malicious_files": [
        "lib/server.ts"
      ]
    },
    {
      "hash": "252754353a0e88eb036ebb3082e9d6a9a5f497db",
      "author": "Damien Arrachequesne",
      "author_email": "damien.arrachequesne@gmail.com",
      "committed_date": "2021-04-30T14:38:11+02:00",
      "message": "feat: add the \"initial_headers\" and \"headers\" events\n\nThose events will be emitted before the response headers are written to\nthe socket:\n\n- \"initial_headers\": on the first request of the connection\n- \"headers\": on all requests (HTTP long-polling and WebSocket upgrade)\n\nSyntax:\n\n```js\n\nserver.on(\"initial_headers\", (headers, req) => {\n  headers[\"test\"] = \"123\";\n  headers[\"set-cookie\"] = \"mycookie=456\";\n});\n\nserver.on(\"headers\", (headers, req) => {\n  headers[\"test\"] = \"789\";\n});\n```\n\nRelated:\n\n- https://github.com/socketio/engine.io/issues/557\n- https://github.com/socketio/socket.io/issues/3630",
      "files_changed": [
        "README.md",
        "lib/server.js",
        "lib/socket.js",
        "lib/transports/polling.js",
        "lib/transports/websocket.js",
        "test/server.js"
      ],
      "insertions": 224,
      "deletions": 55,
      "original_hash": "252754353a0e88eb036ebb3082e9d6a9a5f497db",
      "malicious_files": [
        "lib/server.ts"
      ]
    },
    {
      "hash": "79955091f55be9c66e028a6a3cd297a57ac9afc9",
      "author": "Damien Arrachequesne",
      "author_email": "damien.arrachequesne@gmail.com",
      "committed_date": "2016-12-10T22:01:18+01:00",
      "message": "[fix] Add proper response when handleUpgrade fails (#458)\n\nWhen the `verify` method fails, the current implementation closes the\r\nconnection immediately, which is understood by some proxy (such as\r\nnginx) as if the server was not available (resulting in \"upstream\r\nprematurely closed connection while reading response header from\r\nupstream\" error). That commit make sure a proper response is sent\r\nbefore closing the connection.",
      "files_changed": [
        "lib/server.js"
      ],
      "insertions": 26,
      "deletions": 2,
      "original_hash": "79955091f55be9c66e028a6a3cd297a57ac9afc9",
      "malicious_files": [
        "lib/server.ts"
      ]
    },
    {
      "hash": "271e2df94d39bbd13c33cab98cdd5915f9d28536",
      "author": "Damien Arrachequesne",
      "author_email": "damien.arrachequesne@gmail.com",
      "committed_date": "2021-11-02T22:46:09+01:00",
      "message": "feat: add an implementation based on uWebSockets.js\n\n```js\nconst { App }\u00a0= require(\"uWebSockets.js\");\nconst { uServer } = require(\"engine.io\");\n\nconst app = new App();\nconst server = new uServer();\n\nserver.attach(app);\n\napp.listen(3000);\n```\n\nReference: https://github.com/uNetworking/uWebSockets.js\n\nRelated: https://github.com/socketio/engine.io/issues/578",
      "files_changed": [
        ".github/workflows/ci.yml",
        "lib/engine.io.ts",
        "lib/server.ts",
        "lib/socket.ts",
        "lib/transport.ts",
        "lib/transports-uws/index.ts",
        "lib/transports-uws/polling.ts",
        "lib/transports-uws/websocket.ts",
        "lib/userver.ts",
        "package-lock.json",
        "package.json",
        "test/common.js",
        "test/engine.io.js",
        "test/server.js"
      ],
      "insertions": 1098,
      "deletions": 203,
      "original_hash": "271e2df94d39bbd13c33cab98cdd5915f9d28536",
      "malicious_files": [
        "lib/server.ts"
      ]
    },
    {
      "hash": "e0d720c7f7f5a5de30ff049e0066e35e97cb86a7",
      "author": "Damien Arrachequesne",
      "author_email": "damien.arrachequesne@gmail.com",
      "committed_date": "2017-09-02T14:16:14+02:00",
      "message": "[fix] Check whether 'Origin' header has invalid characters (#531)\n\nSince the 'Origin' header is used as response header, a value with invalid characters would trigger\r\n'The header content contains invalid characters' errors.\r\n\r\nCloses #517",
      "files_changed": [
        "lib/server.js"
      ],
      "insertions": 65,
      "deletions": 0,
      "original_hash": "e0d720c7f7f5a5de30ff049e0066e35e97cb86a7",
      "malicious_files": [
        "lib/server.ts"
      ]
    },
    {
      "hash": "a374471d06e3681a769766a1d068898182f9305f",
      "author": "Damien Arrachequesne",
      "author_email": "damien.arrachequesne@gmail.com",
      "committed_date": "2020-02-05T08:33:00+01:00",
      "message": "feat: disable cookie by default and add sameSite attribute\n\nThe cookie might be used for sticky-session, but is not mandatory so it\nmakes sense to disable it by default.\n\nThe change also add a SameSite=Lax attribute by default.\n\nBreaking change: the syntax has changed from\n\n```\nnew Server({\n  cookieName: \"test\",\n  cookieHttpOnly: false,\n  cookiePath: \"/custom\"\n})\n```\n\nto\n\n```\nnew Server({\n  cookie: {\n    name: \"test\",\n    httpOnly: false,\n    path: \"/custom\"\n  }\n})\n```\n\nAll other options (domain, maxAge, sameSite, ...) are now supported.\n\nReference: https://github.com/jshttp/cookie#options-1",
      "files_changed": [
        "README.md",
        "lib/server.js",
        "test/server.js"
      ],
      "insertions": 80,
      "deletions": 56,
      "original_hash": "a374471d06e3681a769766a1d068898182f9305f",
      "malicious_files": [
        "lib/server.ts"
      ]
    },
    {
      "hash": "7096e98a02295a62c8ea2aa56461d4875887092d",
      "author": "Damien Arrachequesne",
      "author_email": "damien.arrachequesne@gmail.com",
      "committed_date": "2021-04-30T13:04:28+02:00",
      "message": "feat: add a \"connection_error\" event\n\nThe \"connection_error\" event will be emitted when one of the following\nerrors occurs:\n\n- Transport unknown\n- Session ID unknown\n- Bad handshake method\n- Bad request\n- Forbidden\n- Unsupported protocol version\n\nSyntax:\n\n```js\nserver.on(\"connection_error\", (err) => {\n  console.log(err.req);\t\t// the request object\n  console.log(err.code);\t// the error code, for example 1\n  console.log(err.message);\t// the error message, for example \"Session ID unknown\"\n  console.log(err.context);     // some additional error context\n});\n```\n\nRelated:\n\n- https://github.com/socketio/socket.io/issues/3819\n- https://github.com/socketio/engine.io/issues/576",
      "files_changed": [
        "README.md",
        "lib/server.js",
        "test/common.js",
        "test/server.js"
      ],
      "insertions": 305,
      "deletions": 65,
      "original_hash": "7096e98a02295a62c8ea2aa56461d4875887092d",
      "malicious_files": [
        "lib/server.ts"
      ]
    },
    {
      "hash": "0280352f885d0caa6611c283056033efef3fbf1f",
      "author": "Malcom Gilbert",
      "author_email": "malcomgilbert@gmail.com",
      "committed_date": "2013-03-22T17:08:37-04:00",
      "message": "sending error on transport creation failure due to bad request",
      "files_changed": [
        "lib/server.js"
      ],
      "insertions": 28,
      "deletions": 8,
      "original_hash": "0280352f885d0caa6611c283056033efef3fbf1f",
      "malicious_files": [
        "lib/server.ts"
      ]
    },
    {
      "hash": "da93fb6ef3d6f6e2a93226480823683accb82aa3",
      "author": "Damien Arrachequesne",
      "author_email": "damien.arrachequesne@gmail.com",
      "committed_date": "2020-01-12T22:47:18+01:00",
      "message": "refactor: migrate to ES6 syntax",
      "files_changed": [
        "lib/engine.io.js",
        "lib/server.js",
        "lib/socket.js",
        "lib/transport.js",
        "lib/transports/index.js",
        "lib/transports/polling-jsonp.js",
        "lib/transports/polling-xhr.js",
        "lib/transports/polling.js",
        "lib/transports/websocket.js",
        "package-lock.json"
      ],
      "insertions": 4191,
      "deletions": 1573,
      "original_hash": "da93fb6ef3d6f6e2a93226480823683accb82aa3",
      "malicious_files": [
        "lib/server.ts"
      ]
    },
    {
      "hash": "c0d6eaa1ba1291946dc8425d5f533d5f721862dd",
      "author": "Damien Arrachequesne",
      "author_email": "damien.arrachequesne@gmail.com",
      "committed_date": "2021-10-08T14:55:30+02:00",
      "message": "chore: migrate to TypeScript\n\nRelated: https://github.com/socketio/engine.io/issues/510",
      "files_changed": [
        ".gitignore",
        "lib/engine.io.js",
        "lib/engine.io.ts",
        "lib/parser-v3/index.js",
        "lib/parser-v3/index.ts",
        "lib/parser-v3/utf8.js",
        "lib/parser-v3/utf8.ts",
        "lib/server.js",
        "lib/server.ts",
        "lib/socket.js",
        "lib/socket.ts",
        "lib/transport.js",
        "lib/transport.ts",
        "lib/transports/index.js",
        "lib/transports/index.ts",
        "lib/transports/polling-jsonp.js",
        "lib/transports/polling-jsonp.ts",
        "lib/transports/polling.js",
        "lib/transports/polling.ts",
        "lib/transports/websocket.js",
        "lib/transports/websocket.ts",
        "package-lock.json",
        "package.json",
        "test/common.js",
        "test/engine.io.js",
        "test/server.js",
        "tsconfig.json"
      ],
      "insertions": 2901,
      "deletions": 3549,
      "original_hash": "c0d6eaa1ba1291946dc8425d5f533d5f721862dd",
      "malicious_files": [
        "lib/server.ts"
      ]
    },
    {
      "hash": "3a980d9e678c6d2b01354c0666d2c14ea2374b92",
      "author": "Guillermo Rauch",
      "author_email": "rauchg@gmail.com",
      "committed_date": "2011-12-29T13:13:38-05:00",
      "message": "Added Server (manager) interface.",
      "files_changed": [
        "lib/server.js"
      ],
      "insertions": 238,
      "deletions": 0,
      "original_hash": "3a980d9e678c6d2b01354c0666d2c14ea2374b92",
      "malicious_files": [
        "lib/server.ts"
      ]
    },
    {
      "hash": "078527a384b70dc46d99083fa218be5d45213e51",
      "author": "Damien Arrachequesne",
      "author_email": "damien.arrachequesne@gmail.com",
      "committed_date": "2020-09-10T15:46:04+02:00",
      "message": "feat: disable perMessageDeflate by default\n\nThe WebSocket permessage-deflate extension, while useful is some cases,\nadds some extra memory overhead for each WebSocket connection, and\nresults in huge memory usage in production deployments.\n\nIt will now be disabled by default.",
      "files_changed": [
        "README.md",
        "lib/server.js",
        "test/server.js"
      ],
      "insertions": 30,
      "deletions": 21,
      "original_hash": "078527a384b70dc46d99083fa218be5d45213e51",
      "malicious_files": [
        "lib/server.ts"
      ]
    },
    {
      "hash": "cdb487dbdcbf97e771e232fd65b594172fc947b5",
      "author": "Luigi Pinca",
      "author_email": "luigipinca@gmail.com",
      "committed_date": "2017-01-30T15:52:00+01:00",
      "message": "[fix] Initialize the WebSocket server in the `Server` constructor (#476)",
      "files_changed": [
        "lib/server.js",
        "test/engine.io.js"
      ],
      "insertions": 20,
      "deletions": 16,
      "original_hash": "cdb487dbdcbf97e771e232fd65b594172fc947b5",
      "malicious_files": [
        "lib/server.ts"
      ]
    },
    {
      "hash": "2819a0c4cf96846e5dc7ba46f71c4f329b819e2f",
      "author": "Guillermo Rauch",
      "author_email": "rauchg@gmail.com",
      "committed_date": "2012-01-03T10:32:06-08:00",
      "message": "Make Server inherit from EventEmitter",
      "files_changed": [
        "lib/server.js"
      ],
      "insertions": 7,
      "deletions": 1,
      "original_hash": "2819a0c4cf96846e5dc7ba46f71c4f329b819e2f",
      "malicious_files": [
        "lib/server.ts"
      ]
    },
    {
      "hash": "48f006f94794d59b5d7492801c56df92a5432b75",
      "author": "Roman Shtylman",
      "author_email": "shtylman@gmail.com",
      "committed_date": "2014-06-04T13:45:48-04:00",
      "message": "make require('engine.io')() return a new Server instance\n\nfixes #212",
      "files_changed": [
        "README.md",
        "lib/engine.io.js",
        "lib/server.js",
        "test/engine.io.js"
      ],
      "insertions": 49,
      "deletions": 3,
      "original_hash": "48f006f94794d59b5d7492801c56df92a5432b75",
      "malicious_files": [
        "lib/server.ts"
      ]
    },
    {
      "hash": "2d53e5fd8586aeac0113b84f05bd1449020f4bb0",
      "author": "Guillermo Rauch",
      "author_email": "rauchg@gmail.com",
      "committed_date": "2012-01-03T10:34:08-08:00",
      "message": "Implemented Server#close",
      "files_changed": [
        "lib/server.js"
      ],
      "insertions": 12,
      "deletions": 0,
      "original_hash": "2d53e5fd8586aeac0113b84f05bd1449020f4bb0",
      "malicious_files": [
        "lib/server.ts"
      ]
    }
  ]
}