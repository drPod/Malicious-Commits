{
  "vyper": [
    {
      "hash": "21560251ecefd2fbee324caaa0013daa501e1336",
      "author": "Charles Cooper",
      "author_email": "cooper.charles.m@gmail.com",
      "committed_date": "2021-09-20T22:09:23+00:00",
      "message": "fix unwrapping of tuples for real tuples\n\nnot just return types which are wrapped in a tuple for the ABI",
      "files_changed": [
        "vyper/old_codegen/external_call.py"
      ],
      "insertions": 7,
      "deletions": 1,
      "original_hash": "21560251ecefd2fbee324caaa0013daa501e1336",
      "malicious_files": [
        "vyper/codegen/external_call.py"
      ]
    },
    {
      "hash": "42a372e95cb50ead4c9906cd0c6c50d5de881f8b",
      "author": "Charles Cooper",
      "author_email": "cooper.charles.m@gmail.com",
      "committed_date": "2022-05-24T07:30:06-07:00",
      "message": "fix: add extcodesize check when `default_return_value` is activated (#2864)\n\nin the branch where returndatasize == 0, add an extcodesize check. note\r\nthat the extcodesize check is still not foolproof in the presence of\r\nselfdestructs",
      "files_changed": [
        "tests/parser/features/external_contracts/test_external_contract_calls.py",
        "vyper/codegen/external_call.py"
      ],
      "insertions": 41,
      "deletions": 6,
      "original_hash": "42a372e95cb50ead4c9906cd0c6c50d5de881f8b",
      "malicious_files": [
        "vyper/codegen/external_call.py"
      ]
    },
    {
      "hash": "9d1a455dbd403a3009f95a5f8f272d89d0ff6881",
      "author": "Charles Cooper",
      "author_email": "cooper.charles.m@gmail.com",
      "committed_date": "2021-09-11T13:21:26-07:00",
      "message": "wip polish",
      "files_changed": [
        "vyper/ast/signatures/function_signature.py",
        "vyper/old_codegen/abi.py",
        "vyper/old_codegen/arg_clamps.py",
        "vyper/old_codegen/context.py",
        "vyper/old_codegen/external_call.py",
        "vyper/old_codegen/function_definitions/__init__.py",
        "vyper/old_codegen/function_definitions/common.py",
        "vyper/old_codegen/function_definitions/external_function.py",
        "vyper/old_codegen/function_definitions/internal_function.py",
        "vyper/old_codegen/parser.py",
        "vyper/old_codegen/parser_utils.py",
        "vyper/old_codegen/return_.py",
        "vyper/old_codegen/self_call.py",
        "vyper/old_codegen/stmt.py",
        "vyper/old_codegen/types/types.py",
        "vyper/semantics/types/value/array_value.py",
        "vyper/semantics/validation/local.py"
      ],
      "insertions": 218,
      "deletions": 248,
      "original_hash": "9d1a455dbd403a3009f95a5f8f272d89d0ff6881",
      "malicious_files": [
        "vyper/codegen/external_call.py"
      ]
    },
    {
      "hash": "c060afba70bbc7facabfb5fc3efaa67d59222d50",
      "author": "Charles Cooper",
      "author_email": "cooper.charles.m@gmail.com",
      "committed_date": "2021-12-09T13:20:41-08:00",
      "message": "feat: implement skip_contract_check kwarg (#2551)\n\nAdd skip_contract_check as a kwarg to external contract calls\r\nwhich tells codegen to skip extcodesize/returndatasize checks",
      "files_changed": [
        "tests/parser/features/external_contracts/test_external_contract_calls.py",
        "vyper/__init__.py",
        "vyper/old_codegen/external_call.py",
        "vyper/semantics/types/function.py"
      ],
      "insertions": 78,
      "deletions": 13,
      "original_hash": "c060afba70bbc7facabfb5fc3efaa67d59222d50",
      "malicious_files": [
        "vyper/codegen/external_call.py"
      ]
    },
    {
      "hash": "4f3a4cbea9342f3cd82c1799f9c1d28083d479ad",
      "author": "Charles Cooper",
      "author_email": "cooper.charles.m@gmail.com",
      "committed_date": "2021-09-07T12:50:04-07:00",
      "message": "move pack_arguments to external_call",
      "files_changed": [
        "vyper/old_codegen/external_call.py",
        "vyper/old_codegen/parser_utils.py"
      ],
      "insertions": 51,
      "deletions": 55,
      "original_hash": "4f3a4cbea9342f3cd82c1799f9c1d28083d479ad",
      "malicious_files": [
        "vyper/codegen/external_call.py"
      ]
    },
    {
      "hash": "c7b53ee5022e94e6ba8df5a4ae86b118c30ba0ce",
      "author": "Charles Cooper",
      "author_email": "cooper.charles.m@gmail.com",
      "committed_date": "2021-09-16T23:31:20+00:00",
      "message": "move unwrapping code deeper into external call",
      "files_changed": [
        "vyper/old_codegen/external_call.py"
      ],
      "insertions": 19,
      "deletions": 12,
      "original_hash": "c7b53ee5022e94e6ba8df5a4ae86b118c30ba0ce",
      "malicious_files": [
        "vyper/codegen/external_call.py"
      ]
    },
    {
      "hash": "b911f7df70f00b67007a1cc74f4fc292e35028f3",
      "author": "Charles Cooper",
      "author_email": "cooper.charles.m@gmail.com",
      "committed_date": "2021-09-07T13:53:03-07:00",
      "message": "wip external call rewrite",
      "files_changed": [
        "vyper/old_codegen/external_call.py"
      ],
      "insertions": 81,
      "deletions": 161,
      "original_hash": "b911f7df70f00b67007a1cc74f4fc292e35028f3",
      "malicious_files": [
        "vyper/codegen/external_call.py"
      ]
    },
    {
      "hash": "0ccd33919e7c87d4fdff5a5142fdedb96c331a90",
      "author": "Charles Cooper",
      "author_email": "cooper.charles.m@gmail.com",
      "committed_date": "2021-09-15T22:41:19+00:00",
      "message": "wrap ABI values in tuples as needed",
      "files_changed": [
        "vyper/builtin_functions/functions.py",
        "vyper/old_codegen/abi.py",
        "vyper/old_codegen/events.py",
        "vyper/old_codegen/external_call.py",
        "vyper/old_codegen/parser_utils.py",
        "vyper/old_codegen/return_.py",
        "vyper/old_codegen/stmt.py"
      ],
      "insertions": 66,
      "deletions": 47,
      "original_hash": "0ccd33919e7c87d4fdff5a5142fdedb96c331a90",
      "malicious_files": [
        "vyper/codegen/external_call.py"
      ]
    },
    {
      "hash": "2027f6b22992cc01d17fcc38cc9d58d6789ae19f",
      "author": "Charles Cooper",
      "author_email": "cooper.charles.m@gmail.com",
      "committed_date": "2021-09-12T10:51:39-07:00",
      "message": "fix some kwarg handling issues",
      "files_changed": [
        "vyper/ast/signatures/function_signature.py",
        "vyper/old_codegen/abi.py",
        "vyper/old_codegen/context.py",
        "vyper/old_codegen/external_call.py",
        "vyper/old_codegen/function_definitions/external_function.py",
        "vyper/utils.py"
      ],
      "insertions": 36,
      "deletions": 25,
      "original_hash": "2027f6b22992cc01d17fcc38cc9d58d6789ae19f",
      "malicious_files": [
        "vyper/codegen/external_call.py"
      ]
    },
    {
      "hash": "7c1c336c5bd01e7ab4624fa9e9e7399317117bdd",
      "author": "Charles Cooper",
      "author_email": "cooper.charles.m@gmail.com",
      "committed_date": "2021-09-15T16:14:29+00:00",
      "message": "rewrite external call buffer allocation",
      "files_changed": [
        "vyper/old_codegen/external_call.py"
      ],
      "insertions": 21,
      "deletions": 17,
      "original_hash": "7c1c336c5bd01e7ab4624fa9e9e7399317117bdd",
      "malicious_files": [
        "vyper/codegen/external_call.py"
      ]
    },
    {
      "hash": "905db0560f61b3dc6c58895daf1673c8642882f5",
      "author": "Jacques Wagener",
      "author_email": "jacques@dilectum.co.za",
      "committed_date": "2018-12-04T20:40:39+02:00",
      "message": "Move external_call into separate module.",
      "files_changed": [
        "vyper/parser/expr.py",
        "vyper/parser/external_call.py",
        "vyper/parser/parser.py"
      ],
      "insertions": 94,
      "deletions": 70,
      "original_hash": "905db0560f61b3dc6c58895daf1673c8642882f5",
      "malicious_files": [
        "vyper/codegen/external_call.py"
      ]
    },
    {
      "hash": "d666d009f4a682128b5f9c4d126fd46d8902c521",
      "author": "Charles Cooper",
      "author_email": "cooper.charles.m@gmail.com",
      "committed_date": "2019-06-12T15:05:47-07:00",
      "message": "Check constancy when calling to external function",
      "files_changed": [
        "vyper/parser/external_call.py",
        "vyper/parser/self_call.py"
      ],
      "insertions": 12,
      "deletions": 0,
      "original_hash": "d666d009f4a682128b5f9c4d126fd46d8902c521",
      "malicious_files": [
        "vyper/codegen/external_call.py"
      ]
    },
    {
      "hash": "93540d86c4e54e28472e072030d3f46db5029897",
      "author": "Charles Cooper",
      "author_email": "cooper.charles.m@gmail.com",
      "committed_date": "2021-09-16T20:31:20+00:00",
      "message": "fix return type wrapping again",
      "files_changed": [
        "tests/functional/codegen/test_struct_return.py",
        "vyper/old_codegen/external_call.py",
        "vyper/old_codegen/parser_utils.py",
        "vyper/old_codegen/return_.py",
        "vyper/old_codegen/self_call.py",
        "vyper/semantics/types/function.py",
        "vyper/semantics/validation/local.py"
      ],
      "insertions": 48,
      "deletions": 27,
      "original_hash": "93540d86c4e54e28472e072030d3f46db5029897",
      "malicious_files": [
        "vyper/codegen/external_call.py"
      ]
    },
    {
      "hash": "d791ffe9cbeb1ae91da730b9a08264c6f5e5ed8a",
      "author": "Charles Cooper",
      "author_email": "cooper.charles.m@gmail.com",
      "committed_date": "2021-09-09T19:45:40-07:00",
      "message": "fix some lint/surface errors",
      "files_changed": [
        "vyper/ast/signatures/function_signature.py",
        "vyper/old_codegen/abi.py",
        "vyper/old_codegen/arg_clamps.py",
        "vyper/old_codegen/context.py",
        "vyper/old_codegen/external_call.py",
        "vyper/old_codegen/function_definitions/common.py",
        "vyper/old_codegen/function_definitions/external_function.py",
        "vyper/old_codegen/parser.py",
        "vyper/old_codegen/parser_utils.py",
        "vyper/old_codegen/self_call.py",
        "vyper/old_codegen/stmt.py"
      ],
      "insertions": 70,
      "deletions": 59,
      "original_hash": "d791ffe9cbeb1ae91da730b9a08264c6f5e5ed8a",
      "malicious_files": [
        "vyper/codegen/external_call.py"
      ]
    },
    {
      "hash": "e2cb3454920c2f2a6a8e0bbda40975ba5e3c6f5a",
      "author": "Charles Cooper",
      "author_email": "cooper.charles.m@gmail.com",
      "committed_date": "2021-09-11T15:34:52-07:00",
      "message": "wip polish more, fix external calls",
      "files_changed": [
        "vyper/old_codegen/abi.py",
        "vyper/old_codegen/external_call.py",
        "vyper/old_codegen/parser_utils.py"
      ],
      "insertions": 11,
      "deletions": 10,
      "original_hash": "e2cb3454920c2f2a6a8e0bbda40975ba5e3c6f5a",
      "malicious_files": [
        "vyper/codegen/external_call.py"
      ]
    },
    {
      "hash": "377fde587920bf8c87e6cb2f5d513fa8bfac2090",
      "author": "Charles Cooper",
      "author_email": "cooper.charles.m@gmail.com",
      "committed_date": "2021-09-22T01:29:02+00:00",
      "message": "add a JSON_ABI encoding\n\nto differentiate bytestrings which don't need clamping",
      "files_changed": [
        "vyper/old_codegen/external_call.py",
        "vyper/old_codegen/lll_node.py",
        "vyper/old_codegen/parser_utils.py"
      ],
      "insertions": 18,
      "deletions": 6,
      "original_hash": "377fde587920bf8c87e6cb2f5d513fa8bfac2090",
      "malicious_files": [
        "vyper/codegen/external_call.py"
      ]
    },
    {
      "hash": "1b9cb686dd146ac365b1c2f4f917f8bfa43716aa",
      "author": "Charles Cooper",
      "author_email": "cooper.charles.m@gmail.com",
      "committed_date": "2021-09-16T23:03:00+00:00",
      "message": "fix return wrapping again",
      "files_changed": [
        "tests/functional/codegen/test_struct_return.py",
        "vyper/old_codegen/external_call.py",
        "vyper/old_codegen/parser_utils.py",
        "vyper/old_codegen/return_.py",
        "vyper/semantics/types/function.py"
      ],
      "insertions": 21,
      "deletions": 26,
      "original_hash": "1b9cb686dd146ac365b1c2f4f917f8bfa43716aa",
      "malicious_files": [
        "vyper/codegen/external_call.py"
      ]
    },
    {
      "hash": "817b9ea80822e3ed2cbc4651660ad46e1a0b792b",
      "author": "Charles Cooper",
      "author_email": "cooper.charles.m@gmail.com",
      "committed_date": "2021-09-21T23:22:04+00:00",
      "message": "fix method_id calculation for external call",
      "files_changed": [
        "vyper/old_codegen/external_call.py"
      ],
      "insertions": 7,
      "deletions": 1,
      "original_hash": "817b9ea80822e3ed2cbc4651660ad46e1a0b792b",
      "malicious_files": [
        "vyper/codegen/external_call.py"
      ]
    },
    {
      "hash": "e4c08baf55540815fe8f23b9c8fc9c67206916d5",
      "author": "Bryant Eisenbach",
      "author_email": "fubuloubu@gmail.com",
      "committed_date": "2020-06-24T19:12:00-04:00",
      "message": "lint: Black EVERYTHING",
      "files_changed": [
        "docs/conf.py",
        "setup.py",
        "tests/ast/nodes/test_evaluate_binop_decimal.py",
        "tests/ast/nodes/test_evaluate_binop_int.py",
        "tests/ast/nodes/test_evaluate_boolop.py",
        "tests/ast/test_natspec.py",
        "tests/ast/test_pre_parser.py",
        "tests/base_conftest.py",
        "tests/cli/vyper_compile/test_compile_files.py",
        "tests/cli/vyper_compile/test_import_paths.py",
        "tests/cli/vyper_compile/test_parse_args.py",
        "tests/cli/vyper_json/test_compile_from_input_dict.py",
        "tests/cli/vyper_json/test_compile_json.py",
        "tests/cli/vyper_json/test_get_contracts.py",
        "tests/cli/vyper_json/test_get_settings.py",
        "tests/cli/vyper_json/test_interfaces.py",
        "tests/cli/vyper_json/test_output_dict.py",
        "tests/cli/vyper_json/test_output_selection.py",
        "tests/cli/vyper_json/test_parse_args_vyperjson.py",
        "tests/compiler/LLL/test_compile_lll.py",
        "tests/compiler/LLL/test_optimize_lll.py",
        "tests/compiler/LLL/test_repeat.py",
        "tests/compiler/LLL/test_with.py",
        "tests/compiler/test_bytecode_runtime.py",
        "tests/compiler/test_calldatacopy.py",
        "tests/compiler/test_clamps.py",
        "tests/compiler/test_opcodes.py",
        "tests/compiler/test_pre_parser.py",
        "tests/compiler/test_sha3_32.py",
        "tests/compiler/test_source_map.py",
        "tests/conftest.py",
        "tests/examples/auctions/test_blind_auction.py",
        "tests/examples/auctions/test_simple_open_auction.py",
        "tests/examples/company/test_company.py",
        "tests/examples/crowdfund/test_crowdfund_example.py",
        "tests/examples/factory/test_factory.py",
        "tests/examples/market_maker/test_on_chain_market_maker.py",
        "tests/examples/name_registry/test_name_registry.py",
        "tests/examples/safe_remote_purchase/test_safe_remote_purchase.py",
        "tests/examples/storage/test_advanced_storage.py",
        "tests/examples/storage/test_storage.py",
        "tests/examples/tokens/test_erc20.py",
        "tests/examples/tokens/test_erc721.py",
        "tests/examples/voting/test_ballot.py",
        "tests/examples/wallet/test_wallet.py",
        "tests/functions/folding/test_addmod_mulmod.py",
        "tests/functions/folding/test_floor_ceil.py",
        "tests/functions/folding/test_fold_as_wei_value.py",
        "tests/functions/folding/test_keccak_sha.py",
        "tests/functions/folding/test_min_max.py",
        "tests/grammar/conftest.py",
        "tests/grammar/test_grammar.py",
        "tests/parser/ast_utils/test_ast_dict.py",
        "tests/parser/exceptions/test_argument_exception.py",
        "tests/parser/exceptions/test_call_violation.py",
        "tests/parser/exceptions/test_constancy_exception.py",
        "tests/parser/exceptions/test_function_declaration_exception.py",
        "tests/parser/exceptions/test_invalid_literal_exception.py",
        "tests/parser/exceptions/test_invalid_operation.py",
        "tests/parser/exceptions/test_invalid_payable.py",
        "tests/parser/exceptions/test_invalid_reference.py",
        "tests/parser/exceptions/test_invalid_type_exception.py",
        "tests/parser/exceptions/test_namespace_collision.py",
        "tests/parser/exceptions/test_overflow_exception.py",
        "tests/parser/exceptions/test_structure_exception.py",
        "tests/parser/exceptions/test_syntax_exception.py",
        "tests/parser/exceptions/test_type_mismatch_exception.py",
        "tests/parser/exceptions/test_undeclared_definition.py",
        "tests/parser/exceptions/test_variable_declaration_exception.py",
        "tests/parser/exceptions/test_vyper_exception_pos.py",
        "tests/parser/features/arithmetic/test_division.py",
        "tests/parser/features/arithmetic/test_modulo.py",
        "tests/parser/features/decorators/test_constant.py",
        "tests/parser/features/decorators/test_nonreentrant.py",
        "tests/parser/features/decorators/test_private.py",
        "tests/parser/features/decorators/test_public.py",
        "tests/parser/features/external_contracts/test_erc20_abi.py",
        "tests/parser/features/external_contracts/test_external_contract_calls.py",
        "tests/parser/features/external_contracts/test_modifiable_external_contract_calls.py",
        "tests/parser/features/external_contracts/test_self_call_struct.py",
        "tests/parser/features/iteration/test_break.py",
        "tests/parser/features/iteration/test_for_in_list.py",
        "tests/parser/features/iteration/test_range_in.py",
        "tests/parser/features/iteration/test_repeater.py",
        "tests/parser/features/test_assert.py",
        "tests/parser/features/test_assert_unreachable.py",
        "tests/parser/features/test_assignment.py",
        "tests/parser/features/test_bytes_map_keys.py",
        "tests/parser/features/test_comments.py",
        "tests/parser/features/test_conditionals.py",
        "tests/parser/features/test_constructor.py",
        "tests/parser/features/test_gas.py",
        "tests/parser/features/test_init.py",
        "tests/parser/features/test_internal_call.py",
        "tests/parser/features/test_logging.py",
        "tests/parser/features/test_logging_bytes_extended.py",
        "tests/parser/features/test_logging_from_call.py",
        "tests/parser/features/test_packing.py",
        "tests/parser/functions/test_abi.py",
        "tests/parser/functions/test_bitwise.py",
        "tests/parser/functions/test_block_number.py",
        "tests/parser/functions/test_ceil.py",
        "tests/parser/functions/test_concat.py",
        "tests/parser/functions/test_convert_to_address.py",
        "tests/parser/functions/test_convert_to_bool.py",
        "tests/parser/functions/test_convert_to_bytes32.py",
        "tests/parser/functions/test_convert_to_decimal.py",
        "tests/parser/functions/test_convert_to_int128.py",
        "tests/parser/functions/test_convert_to_uint256.py",
        "tests/parser/functions/test_create_with_code_of.py",
        "tests/parser/functions/test_default_function.py",
        "tests/parser/functions/test_default_parameters.py",
        "tests/parser/functions/test_ec.py",
        "tests/parser/functions/test_ecrecover.py",
        "tests/parser/functions/test_empty.py",
        "tests/parser/functions/test_extract32.py",
        "tests/parser/functions/test_floor.py",
        "tests/parser/functions/test_interfaces.py",
        "tests/parser/functions/test_keccak256.py",
        "tests/parser/functions/test_length.py",
        "tests/parser/functions/test_method_id.py",
        "tests/parser/functions/test_minmax.py",
        "tests/parser/functions/test_raw_call.py",
        "tests/parser/functions/test_return.py",
        "tests/parser/functions/test_return_struct.py",
        "tests/parser/functions/test_return_tuple.py",
        "tests/parser/functions/test_send.py",
        "tests/parser/functions/test_slice.py",
        "tests/parser/globals/test_globals.py",
        "tests/parser/globals/test_setters.py",
        "tests/parser/integration/test_basics.py",
        "tests/parser/integration/test_crowdfund.py",
        "tests/parser/integration/test_escrow.py",
        "tests/parser/parser_utils/test_annotate_and_optimize_ast.py",
        "tests/parser/syntax/test_ann_assign.py",
        "tests/parser/syntax/test_as_uint256.py",
        "tests/parser/syntax/test_as_wei_value.py",
        "tests/parser/syntax/test_block.py",
        "tests/parser/syntax/test_blockscope.py",
        "tests/parser/syntax/test_bool.py",
        "tests/parser/syntax/test_bool_ops.py",
        "tests/parser/syntax/test_byte_string.py",
        "tests/parser/syntax/test_bytes.py",
        "tests/parser/syntax/test_chainid.py",
        "tests/parser/syntax/test_code_size.py",
        "tests/parser/syntax/test_codehash.py",
        "tests/parser/syntax/test_concat.py",
        "tests/parser/syntax/test_conditionals.py",
        "tests/parser/syntax/test_constants.py",
        "tests/parser/syntax/test_create_with_code_of.py",
        "tests/parser/syntax/test_extract32.py",
        "tests/parser/syntax/test_for_range.py",
        "tests/parser/syntax/test_functions_call.py",
        "tests/parser/syntax/test_interfaces.py",
        "tests/parser/syntax/test_invalids.py",
        "tests/parser/syntax/test_keccak256.py",
        "tests/parser/syntax/test_len.py",
        "tests/parser/syntax/test_list.py",
        "tests/parser/syntax/test_logging.py",
        "tests/parser/syntax/test_minmax.py",
        "tests/parser/syntax/test_nested_list.py",
        "tests/parser/syntax/test_no_none.py",
        "tests/parser/syntax/test_public.py",
        "tests/parser/syntax/test_raw_call.py",
        "tests/parser/syntax/test_return_tuple.py",
        "tests/parser/syntax/test_self_balance.py",
        "tests/parser/syntax/test_selfdestruct.py",
        "tests/parser/syntax/test_send.py",
        "tests/parser/syntax/test_slice.py",
        "tests/parser/syntax/test_string.py",
        "tests/parser/syntax/test_structs.py",
        "tests/parser/syntax/test_tuple_assign.py",
        "tests/parser/syntax/test_unbalanced_return.py",
        "tests/parser/syntax/utils/test_event_names.py",
        "tests/parser/syntax/utils/test_variable_names.py",
        "tests/parser/types/numbers/test_constants.py",
        "tests/parser/types/numbers/test_decimals.py",
        "tests/parser/types/numbers/test_int128.py",
        "tests/parser/types/numbers/test_sqrt.py",
        "tests/parser/types/numbers/test_uint256.py",
        "tests/parser/types/test_bytes.py",
        "tests/parser/types/test_bytes_literal.py",
        "tests/parser/types/test_bytes_zero_padding.py",
        "tests/parser/types/test_identifier_naming.py",
        "tests/parser/types/test_lists.py",
        "tests/parser/types/test_node_types.py",
        "tests/parser/types/test_string.py",
        "tests/parser/types/test_string_literal.py",
        "tests/parser/types/value/test_as_wei_value.py",
        "tests/signatures/test_invalid_function_decorators.py",
        "tests/signatures/test_method_id_conflicts.py",
        "tests/test_utils.py",
        "vyper/__init__.py",
        "vyper/ast/__init__.py",
        "vyper/ast/annotation.py",
        "vyper/ast/folding.py",
        "vyper/ast/natspec.py",
        "vyper/ast/nodes.py",
        "vyper/ast/nodes.pyi",
        "vyper/ast/pre_parser.py",
        "vyper/ast/validation.py",
        "vyper/cli/vyper_compile.py",
        "vyper/cli/vyper_json.py",
        "vyper/cli/vyper_lll.py",
        "vyper/cli/vyper_serve.py",
        "vyper/codegen/abi.py",
        "vyper/codegen/return_.py",
        "vyper/compile_lll.py",
        "vyper/compiler/__init__.py",
        "vyper/compiler/output.py",
        "vyper/compiler/phases.py",
        "vyper/compiler/utils.py",
        "vyper/context/types/function.py",
        "vyper/functions/convert.py",
        "vyper/functions/functions.py",
        "vyper/functions/signatures.py",
        "vyper/functions/utils.py",
        "vyper/opcodes.py",
        "vyper/optimizer.py",
        "vyper/parser/arg_clamps.py",
        "vyper/parser/constants.py",
        "vyper/parser/context.py",
        "vyper/parser/events.py",
        "vyper/parser/expr.py",
        "vyper/parser/external_call.py",
        "vyper/parser/function_definitions/parse_function.py",
        "vyper/parser/function_definitions/parse_private_function.py",
        "vyper/parser/function_definitions/parse_public_function.py",
        "vyper/parser/function_definitions/utils.py",
        "vyper/parser/global_context.py",
        "vyper/parser/keccak256_helper.py",
        "vyper/parser/lll_node.py",
        "vyper/parser/memory_allocator.py",
        "vyper/parser/parser.py",
        "vyper/parser/parser_utils.py",
        "vyper/parser/s_expressions.py",
        "vyper/parser/self_call.py",
        "vyper/parser/stmt.py",
        "vyper/settings.py",
        "vyper/signatures/event_signature.py",
        "vyper/signatures/function_signature.py",
        "vyper/signatures/interface.py",
        "vyper/signatures/sig_utils.py",
        "vyper/types/check.py",
        "vyper/types/types.py",
        "vyper/utils.py"
      ],
      "insertions": 6662,
      "deletions": 6471,
      "original_hash": "e4c08baf55540815fe8f23b9c8fc9c67206916d5",
      "malicious_files": [
        "vyper/codegen/external_call.py"
      ]
    },
    {
      "hash": "a2ae037ee9e16e8db77b9b6880f8010f18efaf22",
      "author": "Ben Hauser",
      "author_email": "ben@hauser.id",
      "committed_date": "2020-06-27T19:47:54+04:00",
      "message": "fix: allow external calls to self",
      "files_changed": [
        "vyper/parser/external_call.py"
      ],
      "insertions": 1,
      "deletions": 3,
      "original_hash": "a2ae037ee9e16e8db77b9b6880f8010f18efaf22",
      "malicious_files": [
        "vyper/codegen/external_call.py"
      ]
    },
    {
      "hash": "6b4d8ff185de071252feaa1c319712b2d6577f8d",
      "author": "Charles Cooper",
      "author_email": "cooper.charles.m@gmail.com",
      "committed_date": "2022-06-06T11:38:28-07:00",
      "message": "Merge pull request from GHSA-4v9q-cgpw-cf38\n\nin external call codegen, when `extcodesize` is called on the target\naddress, the IR for evaluating the target address can be evaluated\ntwice. this can result in any side effects (embedded in the evaluation\nof the target address) being executed twice.",
      "files_changed": [
        "tests/parser/features/external_contracts/test_external_contract_calls.py",
        "vyper/codegen/external_call.py"
      ],
      "insertions": 56,
      "deletions": 9,
      "original_hash": "6b4d8ff185de071252feaa1c319712b2d6577f8d",
      "malicious_files": [
        "vyper/codegen/external_call.py"
      ]
    },
    {
      "hash": "3195701eff4b227fefdb7ac7fbb386e8dc364c55",
      "author": "Charles Cooper",
      "author_email": "cooper.charles.m@gmail.com",
      "committed_date": "2022-05-13T13:40:37-07:00",
      "message": "feat: add `default_return_value` kwarg for calls (#2839)\n\nthis commit adds a new kwarg, `default_return_value`, available to all\r\nexternal calls. its purpose is to make it easier to interface with\r\ncontracts which are not compliant with their interfaces (e.g., bad ERC20\r\nimplementations) without having to drop down to `raw_call`.\r\n\r\nsince the logic for handling kwargs in `external_call.py` was getting a\r\nlittle gnarly, this commit also refactors and that module a bit. for\r\nconsistency, it also switches to exclusively using the\r\ntypechecker type of the function.",
      "files_changed": [
        "tests/parser/features/external_contracts/test_external_contract_calls.py",
        "vyper/codegen/expr.py",
        "vyper/codegen/external_call.py",
        "vyper/codegen/stmt.py",
        "vyper/semantics/types/function.py"
      ],
      "insertions": 187,
      "deletions": 123,
      "original_hash": "3195701eff4b227fefdb7ac7fbb386e8dc364c55",
      "malicious_files": [
        "vyper/codegen/external_call.py"
      ]
    },
    {
      "hash": "049dbdc647b2ce838fae7c188e6bb09cf16e470b",
      "author": "Charles Cooper",
      "author_email": "cooper.charles.m@gmail.com",
      "committed_date": "2022-04-13T06:39:37-07:00",
      "message": "Merge pull request from GHSA-j2x6-9323-fp7h\n\nThis commit addresses two issues in validating returndata, both related\nto the inferred type of the external call return.\n\nFirst, it addresses an issue with interfaces imported from JSON. The\nJSON_ABI encoding type was added in 0.3.0 as part of the calling\nconvention refactor to mimic the old code's behavior when the signature\nof a function had `is_from_json` toggled to True. However, both\nimplementations were a workaround for the fact that in\nFunctionSignatures from JSON with Bytes return types, length is set to 1\nas a hack to ensure they always typecheck - almost always resulting in a\nruntime revert.\n\nThis commit removes the JSON_ABI encoding type, so that dynamic\nreturndata from an interface defined with .json ABI file cannot result\nin a buffer overrun(!). To avoid the issue with always runtime\nreverting, codegen uses the uses the inferred ContractFunction type of\nthe Call.func member (which is both more accurate than the inferred type\nof the Call expression, and the return type on the FunctionSignature!)\nto calculate the length of the external Bytes array.\n\nSecond, this commit addresses an issue with validating call returns in\ncomplex expressions. In the following examples, the type of the call\nreturn is either inferred incorrectly or it takes a path through codegen\nwhich avoids generating runtime clamps:\n\n```\ninterface Foo:\n    def returns_int128() -> int128: view\n    def returns_Bytes3() -> Bytes[3]: view\n\nfoo: Foo\n...\nx: uint256 = convert(self.foo.returns_int128(), uint256)\ny: Bytes[32] = concat(self.foo.returns_Bytes3(), b\"\")\n```\n\nTo address this issue, if the type of returndata needs validation, this\ncommit decodes the returndata \"strictly\" into a newly allocated buffer\nat the time of the call, to avoid unvalidated data accidentally getting\ninto the runtime. This does result in extra memory traffic which is a\nperformance hit, but the performance issue can be addressed at a later\ndate with a zero-copy buffering scheme (parent Expr allocates the\nbuffer).\n\nAdditional minor fixes and cleanup:\n- fix compiler panic in new_type_to_old_type for Tuples\n- remove `_should_decode` helper function as it duplicates `needs_clamp`\n- minor optimization in returndatasize check - assert ge uses one fewer\n  instruction than assert gt.",
      "files_changed": [
        "tests/parser/functions/test_interfaces.py",
        "vyper/codegen/core.py",
        "vyper/codegen/external_call.py",
        "vyper/codegen/function_definitions/external_function.py",
        "vyper/codegen/ir_node.py",
        "vyper/codegen/types/convert.py"
      ],
      "insertions": 214,
      "deletions": 80,
      "original_hash": "049dbdc647b2ce838fae7c188e6bb09cf16e470b",
      "malicious_files": [
        "vyper/codegen/external_call.py"
      ]
    }
  ]
}