{
  "django-ses": [
    {
      "hash": "cebf2e94fe6af3cf1da130b9f2d6ebb131f5af24",
      "author": "Ian Lewis",
      "author_email": "IanMLewis@gmail.com",
      "committed_date": "2013-05-29T20:50:51+09:00",
      "message": "Added logging and better error handling.",
      "files_changed": [
        "django_ses/utils.py"
      ],
      "insertions": 26,
      "deletions": 19,
      "original_hash": "cebf2e94fe6af3cf1da130b9f2d6ebb131f5af24",
      "malicious_files": [
        "django_ses/utils.py"
      ]
    },
    {
      "hash": "1997fbb8682a6ec950fb0a539872806ea875a993",
      "author": "Mike Lissner",
      "author_email": "mlissner@michaeljaylissner.com",
      "committed_date": "2022-04-02T12:47:19-06:00",
      "message": "Small code enhancements (#243)\n\n* Small code enhancements\r\n\r\n* References CHANGES.md in README.rst.",
      "files_changed": [
        "README.rst",
        "django_ses/utils.py",
        "tests/test_verifier.py"
      ],
      "insertions": 9,
      "deletions": 5,
      "original_hash": "1997fbb8682a6ec950fb0a539872806ea875a993",
      "malicious_files": [
        "django_ses/utils.py"
      ]
    },
    {
      "hash": "b71b5f413293a13997b6e6314086cb9c22629795",
      "author": "Paul Craciunoiu",
      "author_email": "paul@craciunoiu.net",
      "committed_date": "2023-05-21T09:35:36-06:00",
      "message": "Restrict amazonaws allowed certificate URLs.",
      "files_changed": [
        "django_ses/utils.py"
      ],
      "insertions": 50,
      "deletions": 32,
      "original_hash": "b71b5f413293a13997b6e6314086cb9c22629795",
      "malicious_files": [
        "django_ses/utils.py"
      ]
    },
    {
      "hash": "082eea9f83804dda3e1d7c9b7e7de2957880b322",
      "author": "Mike Lissner",
      "author_email": "mlissner@michaeljaylissner.com",
      "committed_date": "2022-03-31T11:57:27-06:00",
      "message": "swap m2crypto for cryptography (#239)\n\n* Simplify _get_bytes_to_sign()\r\n\r\nI simplified this a bunch:\r\n - Removes smart_str. If we need to use that and if it replaces `errors`, that\r\n   will certainly break the signature.\r\n - The current code converts using smart_str, then str(), then converts to\r\n   bytes (all while using StringIO). Instead of all that, just use a str b/c\r\n   json will be utf-8, concatenate it all in place, and then convert to bytes.\r\n - This removes the `.get()` call on self._data(). I couldn't figure out why\r\n   this was here. Perhaps for tests, but I can't imagine an SNS message that\r\n   lacks required fields.\r\n\r\n* Simplify _get_cert_url\r\n\r\nJust tweaked this to remove deep nesting and replace it with early abortions.\r\nAll functionality is maintained, but this does highlight that there's an\r\nunaccounted for code path after the last `if`. If the parts don't line up, we\r\njust return None. Should we instead log a warning or...something?\r\n\r\n* Simplify `certificate` property and switch to use `cryptography`\r\n\r\nA few things:\r\n\r\n0. This is the first half of swapping out M2Crypto for `cryptography`.\r\n\r\n1. This fixes a bug in this method because previously the method did not set a\r\n   timeout on requests. This could leave the program hanging indefinitely.\r\n\r\n   See: https://github.com/psf/requests/issues/3070\r\n\r\n   I also switched out the r.status_code != 200, for a r.raise_for_status(),\r\n   and put that in a try/except that will also catch network errors.\r\n\r\n2. I added a cache for the certificates in _CERT_CACHE. This ignores the TODO\r\n   that was here that said this needs to be done \"in a secure way.\" I couldn't\r\n   think of a better way to do this, and I didn't understand the threat model\r\n   where a Python dictionary was unsafe. If you can't trust your code or your\r\n   memory, all is lost, right? What's the intent of this TODO? Hopefully it's\r\n   OK. I thought it was better to have this cache than to be stuck waiting on\r\n   something I didn't understand.\r\n\r\n3. I abstracted out the import error message so it could be used in other\r\n   methods.\r\n\r\n4. As elsewhere, I flipped the caching logic a bit to simplify the if/else\r\n   nesting.\r\n\r\n* Swaps M2Crypto for cryptography\r\n\r\n1. Tweaks caching logic to simplify nesting.\r\n2. Swaps out m2Crypto for cryptography\r\n\r\n* Remove m2crypto and add cryptography\r\n\r\nThis also fixes a bug we had in our pyproject.toml file. To\r\ninclude something as an extra, it needs to be an optional\r\ndependency and also get included in the [tool.poetry.extras]\r\nsection, as here.\r\n\r\n* Update README.rst\r\n\r\n1. Removes note re installing the SMTP SSL library. I checked this out and it\r\nhasn't been needed for years. The project is unmaintained and has a warning\r\nnot to use it.\r\n\r\n2. Simplifies the install directions to remove the note re boto3, since it gets\r\ninstalled automatically anyway.\r\n\r\n* Update bytes_to_sign test to have all fields\r\n\r\n* Update tests for cryptography and add valid messages\r\n\r\n* Increase verbosity of tests\r\n\r\n* Add cryptography and requests as dependencies for tox\r\n\r\n* Add tox as a dev dependency\r\n\r\n* Use list-join instead of str-append for performance\r\n\r\n* Add helpful function for clearing the cache",
      "files_changed": [
        "README.rst",
        "django_ses/utils.py",
        "poetry.lock",
        "pyproject.toml",
        "runtests.py",
        "tests/test_verifier.py",
        "tox.ini"
      ],
      "insertions": 528,
      "deletions": 157,
      "original_hash": "082eea9f83804dda3e1d7c9b7e7de2957880b322",
      "malicious_files": [
        "django_ses/utils.py"
      ]
    },
    {
      "hash": "8cd8d763994537da7284c24bf4c6fee606cb8ddd",
      "author": "Ian Lewis",
      "author_email": "IanMLewis@gmail.com",
      "committed_date": "2013-05-29T23:43:35+09:00",
      "message": "Only get the signing certificate from trusted urls\n\nAdded an AWS_SNS_BOUNCE_CERT_TRUSTED_DOMAINS setting which contains\na list of domains which can be trusted when receiving the signing\ncertificate for bounce messages.",
      "files_changed": [
        "django_ses/settings.py",
        "django_ses/utils.py"
      ],
      "insertions": 70,
      "deletions": 37,
      "original_hash": "8cd8d763994537da7284c24bf4c6fee606cb8ddd",
      "malicious_files": [
        "django_ses/utils.py"
      ]
    },
    {
      "hash": "a082dcfc238598c71f8bd6895046ad3facbbc65e",
      "author": "Goksel Coban",
      "author_email": "goksel326@gmail.com",
      "committed_date": "2021-03-31T09:27:27-06:00",
      "message": "Improve email monitoring/tracking (#199)\n\n* improve email monitoring/tracking\r\n\r\n- handle send, open and click events\r\n- add send_received, open_received, click_received signals\r\n- add handle_event view (with bakcward support to handle_bouce)\r\n\r\n* update documentation and examples\r\n\r\n* add SESEventWebhookView for monitoring and tracking\r\n\r\n- fix python2.7 error\r\n- add deprecation warnings\r\n\r\n* remove \"django_ses\" prefix from the view name\r\n\r\n* document auto confirming subscriptions feature\r\n\r\n* add verify_event_message class method to allow override\r\n\r\n* return 400 if the signature verification fails\r\n\r\n* add _handle_event helper method\r\n\r\n* check response status codes in tests\r\n\r\n* don't re-subscribe the unsubscribe topic",
      "files_changed": [
        ".gitignore",
        "README.rst",
        "django_ses/deprecation.py",
        "django_ses/settings.py",
        "django_ses/signals.py",
        "django_ses/utils.py",
        "django_ses/views.py",
        "example/urls.py",
        "setup.py",
        "tests/test_urls.py",
        "tests/test_views.py"
      ],
      "insertions": 658,
      "deletions": 106,
      "original_hash": "a082dcfc238598c71f8bd6895046ad3facbbc65e",
      "malicious_files": [
        "django_ses/utils.py"
      ]
    },
    {
      "hash": "ff7cd9824dfbfc431e74a29064f48002b33b3535",
      "author": "zeioth",
      "author_email": "zeioth@hotmail.com",
      "committed_date": "2015-02-28T19:52:37+01:00",
      "message": "Ported to Python3",
      "files_changed": [
        "django_ses/__init__.py",
        "django_ses/management/commands/ses_email_address.py",
        "django_ses/utils.py",
        "django_ses/views.py"
      ],
      "insertions": 22,
      "deletions": 25,
      "original_hash": "ff7cd9824dfbfc431e74a29064f48002b33b3535",
      "malicious_files": [
        "django_ses/utils.py"
      ]
    },
    {
      "hash": "72c60def0d45a393c9f000fad8732f5cb04e7d02",
      "author": "Ian Lewis",
      "author_email": "IanMLewis@gmail.com",
      "committed_date": "2013-05-27T22:37:47+09:00",
      "message": "Implemented verifying SNS bounce messages.\n\nThe following has been implemented:\n\n1. Decoding the signature\n2. Downloading and extracting the public key for the signing\ncertificate.\n3. Generating the message to sign.\n4. Verifying the message using the public key.\n\nSome issues remain:\n\n1. Retrieving the signing certificate every time we recieve a bounce\nmessage is rather dumb. This is hard though because we can't just cache\na certificate without raising security issues.\n2. Retrieving the signing certificate is done from any domain. This\ncould be probematic because anyone could craft a bounce message and sign\nit using their own certificate. Amazon's documentation doesn't mention\nanything about trusted domains.\n3. We should do better error handling surrounding the verification\nprocess. We should be able to handle errors loading the certificate or\nverifying the signature.",
      "files_changed": [
        "django_ses/settings.py",
        "django_ses/utils.py",
        "django_ses/views.py"
      ],
      "insertions": 170,
      "deletions": 4,
      "original_hash": "72c60def0d45a393c9f000fad8732f5cb04e7d02",
      "malicious_files": [
        "django_ses/utils.py"
      ]
    }
  ]
}